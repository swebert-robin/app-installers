apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "mysql.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "mysql.fullname" . }}
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    #robin.io/networks: '[{"ippool": "ovs-3"}]'
    #robin.io/robinrpool: t1
    #robin.io/networks: '[{"ippool": "ovs-5", "static_ip_policy": "range", "static_ips":["10.9.115.210"]}]'
    #robin.io/networks: '[{"ippool": "ovs-2", "static_ip_policy": "range", "static_ips":["10.9.115.202"]}, {"ippool": "ovs-2", "static_ip_policy": "range", "static_ips":["10.9.115.203"]}]'
    #robin.io/networks: '[{"ippool": "ovs-2", "static_ip_policy": "range", "static_ips":["10.9.115.210"]}]'
    #robin.io/networks: '[{"ippool": "ovs-2", "static_ip_policy": "range", "static_ips":["10.9.115.211-212"]}]'

spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "mysql.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "mysql.fullname" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ template "mysql.fullname" . }}
        image: robinsys/dpdk:v1
        command: ["/bin/sh"]
        #args: ["-c", "while true;do  dd if=/dev/zero of=/mydata/file.dat  bs=1G count=10; sleep 60; rm -rf /mydata/file.dat;sync ;sync;dd if=/dev/urandom of=/mydata/file.dat  bs=1G count=10;sleep 60;rm -rf /mydata/file.dat;sync;sync;done"]
        #args: ["-c", "while true;do  dd if=/dev/zero of=/mydata/file.dat  bs=1G count=10;sync;done"]
        args: ["-c", "while true;do  dd if=/dev/urandom of=/mydata/file.dat  bs=2M count=1000 oflag=direct;done"]
        imagePullPolicy: IfNotPresent
        workingDir: /root/dpdk
        securityContext:
           capabilities:
             add:
               - IPC_LOCK
               - NET_ADMIN
               - SYS_NICE
           privileged: true
           allowPrivilegeEscalation: true
        volumeMounts:
        - mountPath: /mydata
          name: "{{ .Release.Name }}"
        resources:
          requests:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: "{{ .Release.Name }}"
        persistentVolumeClaim:
          claimName: "{{ .Release.Name }}"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ .Release.Name }}"
  labels:
    robin.io/nfs-server-type: "exclusive"
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: robin-rwx


